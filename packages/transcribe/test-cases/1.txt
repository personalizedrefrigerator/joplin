build: 5449 (8e186ef0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
llama_model_loader: loaded meta data with 25 key-value pairs and 339 tensors from /models/Model-7.6B-Q4_K_M.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = qwen2
llama_model_loader: - kv   1:                               general.type str              = model
llama_model_loader: - kv   2:                               general.name str              = Model
llama_model_loader: - kv   3:                         general.size_label str              = 7.6B
llama_model_loader: - kv   4:                          qwen2.block_count u32              = 28
llama_model_loader: - kv   5:                       qwen2.context_length u32              = 32768
llama_model_loader: - kv   6:                     qwen2.embedding_length u32              = 3584
llama_model_loader: - kv   7:                  qwen2.feed_forward_length u32              = 18944
llama_model_loader: - kv   8:                 qwen2.attention.head_count u32              = 28
llama_model_loader: - kv   9:              qwen2.attention.head_count_kv u32              = 4
llama_model_loader: - kv  10:                       qwen2.rope.freq_base f32              = 1000000.000000
llama_model_loader: - kv  11:     qwen2.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = gpt2
llama_model_loader: - kv  13:                         tokenizer.ggml.pre str              = qwen2
llama_model_loader: - kv  14:                      tokenizer.ggml.tokens arr[str,151700]  = ["!", "\"", "#", "$", "%", "&", "'", ...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,151700]  = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                      tokenizer.ggml.merges arr[str,151387]  = ["Ġ Ġ", "ĠĠ ĠĠ", "i n", "Ġ t",...
llama_model_loader: - kv  17:                tokenizer.ggml.bos_token_id u32              = 151644
llama_model_loader: - kv  18:                tokenizer.ggml.eos_token_id u32              = 151645
llama_model_loader: - kv  19:            tokenizer.ggml.unknown_token_id u32              = 128244
llama_model_loader: - kv  20:            tokenizer.ggml.padding_token_id u32              = 151643
llama_model_loader: - kv  21:               tokenizer.ggml.add_bos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {%- if tools %}\n    {{- '<|im_start|>...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                          general.file_type u32              = 15
llama_model_loader: - type  f32:  141 tensors
llama_model_loader: - type q4_K:  169 tensors
llama_model_loader: - type q6_K:   29 tensors
print_info: file format = GGUF V3 (latest)
print_info: file type   = Q4_K - Medium
print_info: file size   = 4.35 GiB (4.91 BPW) 
load: special tokens cache size = 58
load: token to piece cache size = 0.9313 MB
print_info: arch             = qwen2
print_info: vocab_only       = 0
print_info: n_ctx_train      = 32768
print_info: n_embd           = 3584
print_info: n_layer          = 28
print_info: n_head           = 28
print_info: n_head_kv        = 4
print_info: n_rot            = 128
print_info: n_swa            = 0
print_info: n_swa_pattern    = 1
print_info: n_embd_head_k    = 128
print_info: n_embd_head_v    = 128
print_info: n_gqa            = 7
print_info: n_embd_k_gqa     = 512
print_info: n_embd_v_gqa     = 512
print_info: f_norm_eps       = 0.0e+00
print_info: f_norm_rms_eps   = 1.0e-06
print_info: f_clamp_kqv      = 0.0e+00
print_info: f_max_alibi_bias = 0.0e+00
print_info: f_logit_scale    = 0.0e+00
print_info: f_attn_scale     = 0.0e+00
print_info: n_ff             = 18944
print_info: n_expert         = 0
print_info: n_expert_used    = 0
print_info: causal attn      = 1
print_info: pooling type     = -1
print_info: rope type        = 2
print_info: rope scaling     = linear
print_info: freq_base_train  = 1000000.0
print_info: freq_scale_train = 1
print_info: n_ctx_orig_yarn  = 32768
print_info: rope_finetuned   = unknown
print_info: ssm_d_conv       = 0
print_info: ssm_d_inner      = 0
print_info: ssm_d_state      = 0
print_info: ssm_dt_rank      = 0
print_info: ssm_dt_b_c_rms   = 0
print_info: model type       = 7B
print_info: model params     = 7.61 B
print_info: general.name     = Model
print_info: vocab type       = BPE
print_info: n_vocab          = 151700
print_info: n_merges         = 151387
print_info: BOS token        = 151644 '<|im_start|>'
print_info: EOS token        = 151645 '<|im_end|>'
print_info: EOT token        = 151645 '<|im_end|>'
print_info: UNK token        = 128244 '<unk>'
print_info: PAD token        = 151643 '<|endoftext|>'
print_info: LF token         = 198 'Ċ'
print_info: FIM PRE token    = 151659 '<|fim_prefix|>'
print_info: FIM SUF token    = 151661 '<|fim_suffix|>'
print_info: FIM MID token    = 151660 '<|fim_middle|>'
print_info: FIM PAD token    = 151662 '<|fim_pad|>'
print_info: FIM REP token    = 151663 '<|repo_name|>'
print_info: FIM SEP token    = 151664 '<|file_sep|>'
print_info: EOG token        = 151643 '<|endoftext|>'
print_info: EOG token        = 151645 '<|im_end|>'
print_info: EOG token        = 151662 '<|fim_pad|>'
print_info: EOG token        = 151663 '<|repo_name|>'
print_info: EOG token        = 151664 '<|file_sep|>'
print_info: max token length = 256
load_tensors: loading model tensors, this can take a while... (mmap = true)
load_tensors: offloading 0 repeating layers to GPU
load_tensors: offloaded 0/29 layers to GPU
load_tensors:  CPU_AARCH64 model buffer size =  2976.75 MiB
load_tensors:   CPU_Mapped model buffer size =  4422.31 MiB
...................................................................................
llama_context: constructing llama_context
llama_context: n_seq_max     = 1
llama_context: n_ctx         = 4096
llama_context: n_ctx_per_seq = 4096
llama_context: n_batch       = 2048
llama_context: n_ubatch      = 512
llama_context: causal_attn   = 1
llama_context: flash_attn    = 0
llama_context: freq_base     = 1000000.0
llama_context: freq_scale    = 1
llama_context: n_ctx_per_seq (4096) < n_ctx_train (32768) -- the full capacity of the model will not be utilized
llama_context:        CPU  output buffer size =     0.58 MiB
llama_kv_cache_unified:        CPU KV buffer size =   224.00 MiB
llama_kv_cache_unified: size =  224.00 MiB (  4096 cells,  28 layers,  1 seqs), K (f16):  112.00 MiB, V (f16):  112.00 MiB
llama_context:        CPU compute buffer size =   303.29 MiB
llama_context: graph nodes  = 1098
llama_context: graph splits = 1
common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
clip_ctx: CLIP using CPU backend
mtmd_cli_context: chat template example:
<|im_start|>system
You are a helpful assistant<|im_end|>
<|im_start|>user
Hello<|im_end|>
<|im_start|>assistant
Hi there<|im_end|>
<|im_start|>user
How are you?<|im_end|>
<|im_start|>assistant

clip_model_loader: model name:   
clip_model_loader: description:  image encoder for MiniCPM-V
clip_model_loader: GGUF version: 3
clip_model_loader: alignment:    32
clip_model_loader: n_tensors:    455
clip_model_loader: n_kv:         19

load_hparams: projector:          resampler
load_hparams: n_embd:             1152
load_hparams: n_head:             16
load_hparams: n_ff:               4304
load_hparams: n_layer:            27
load_hparams: projection_dim:     0
load_hparams: image_size:         448
load_hparams: patch_size:         14

load_hparams: has_llava_proj:     0
load_hparams: minicpmv_version:   4
load_hparams: proj_scale_factor:  0
load_hparams: n_wa_pattern:       0
load_hparams: ffn_op:             gelu
load_hparams: model size:         996.02 MiB
load_hparams: metadata size:      0.16 MiB
alloc_compute_meta:        CPU compute buffer size =    98.30 MiB
main: loading model: /models/Model-7.6B-Q4_K_M.gguf
encoding image or slice...
image/slice encoded in 9826 ms
decoding image batch 1/1, n_tokens_batch = 64
image decoded (batch 1/1) in 4417 ms
encoding image or slice...
image/slice encoded in 11778 ms
decoding image batch 1/1, n_tokens_batch = 64
image decoded (batch 1/1) in 4669 ms
encoding image or slice...
image/slice encoded in 11286 ms
decoding image batch 1/1, n_tokens_batch = 64
image decoded (batch 1/1) in 4807 ms
encoding image or slice...
image/slice encoded in 11473 ms
decoding image batch 1/1, n_tokens_batch = 64
image decoded (batch 1/1) in 4669 ms
encoding image or slice...
image/slice encoded in 11529 ms
decoding image batch 1/1, n_tokens_batch = 64
image decoded (batch 1/1) in 4966 ms
encoding image or slice...
image/slice encoded in 11526 ms
decoding image batch 1/1, n_tokens_batch = 64
image decoded (batch 1/1) in 4511 ms
encoding image or slice...
image/slice encoded in 11520 ms
decoding image batch 1/1, n_tokens_batch = 64
image decoded (batch 1/1) in 5750 ms
encoding image or slice...
image/slice encoded in 11757 ms
decoding image batch 1/1, n_tokens_batch = 64
image decoded (batch 1/1) in 4580 ms
encoding image or slice...
image/slice encoded in 12242 ms
decoding image batch 1/1, n_tokens_batch = 64
image decoded (batch 1/1) in 8297 ms
encoding image or slice...
image/slice encoded in 17245 ms
decoding image batch 1/1, n_tokens_batch = 64
image decoded (batch 1/1) in 7214 ms

```python
Kroken HTR

Tasks:
- Compare French HTR accuracy with Finetuned TROCR.
  - Set up comparison logic:
    - Kroken
    - TROCR
- Evaluate page segmentation performance. <--- T-C a seg
- Can there models run on end-user computers?
  - Kroken?
  - TROCR?
```


llama_perf_context_print:        load time =    2864.94 ms
llama_perf_context_print: prompt eval time =  183669.04 ms /   755 tokens (  243.27 ms per token,     4.11 tokens per second)
llama_perf_context_print:        eval time =   16542.92 ms /    78 runs   (  212.09 ms per token,     4.72 tokens per second)
llama_perf_context_print:       total time =  200928.48 ms /   833 tokens